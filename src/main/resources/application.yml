server:
  port: 8081
  servlet:
    context-path: /

spring:
  application:
    name: global-mcp-client
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  ai:
    # Google Gemini configuration (Core API) - Enabled with valid API key
    google:
      gemini:
        enabled: true  # Enabled with working API key
        api-key: AIzaSyCHlUfzXkvdlDFrtF1NXdjNnlKb4YwaITk
        chat:
          options:
            model: gemini-1.5-flash
            temperature: 0.7
            max-tokens: 2048
    # Fallback to Ollama if Gemini is not available
    ollama:
      base-url: "http://localhost:11434"
      chat:
        options:
          model: "llama3.1:8b"
          temperature: 0.7
          max-tokens: 2048
  web:
    cors:
      allowed-origins: "*"
      allowed-methods: "*"
      allowed-headers: "*"
#  ai:
#    ollama:
#      base-url: "http://localhost:11434"
#      chat:
#        options:
#          model: "llama3.1:8b"
#          temperature: 0.7
#          max-tokens: 2048

logging:
  level:
    com.deepai: INFO
    org.springframework.web: WARN
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# AI Configuration for custom implementation
ai:
  enabled: true
  provider: pattern-matching
  model: gemini-1.5-flash
  api-key: AIzaSyCHlUfzXkvdlDFrtF1NXdjNnlKb4YwaITk

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

mcp:
  client:
    default-timeout: 5000
    retry:
      max-attempts: 2
      backoff-multiplier: 1.2
  servers:
    mongo-mcp-server-test:
      type: stdio
      command: "java"
      args:
        - "-Dspring.profiles.active=mcp"
        - "-Dspring.main.web-application-type=none"
        - "-jar"
        - 'D:\\MCP\\MCP-workspace-bootcampToProd\\spring-boot-ai-mongo-mcp-server\\target\\spring-boot-ai-mongo-mcp-server-0.0.1-SNAPSHOT.jar'
      timeout: 8000
      enabled: true
      environment:
        SPRING_DATA_MONGODB_URI: "mongodb://localhost:27017/mcpserver"
        MONGO_DATABASE: "mcpserver"

---
# Server profile - disable MCP servers for REST API testing
spring:
  config:
    activate:
      on-profile: server

mcp:
  servers: {}
#    filesystem-python-mcp-server:
#      type: stdio
#      command: "D:\\MCP\\MCP-workspace-bootcampToProd\\filesystem_mcp_server\\venv\\Scripts\\python.exe"
#      args:
#        - "D:\\MCP\\MCP-workspace-bootcampToProd\\filesystem_mcp_server\\src\\main.py"
#      timeout: 8000
#      enabled: true
