server:
  port: 8080
  servlet:
    context-path: /

spring:
  application:
    name: global-mcp-client
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  web:
    cors:
      allowed-origins: "*"
      allowed-methods: "*"
      allowed-headers: "*"

logging:
  level:
    com.officeworkplace: DEBUG
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

mcp:
  client:
    default-timeout: 30000
    max-connections: 100
    connection-pool-size: 10
    retry:
      max-attempts: 3
      backoff-multiplier: 2
  servers:
    # GitHub MCP Server - Production Ready
    github-mcp-server:
      type: http
      url: "https://api.githubcopilot.com/mcp/"
      timeout: 30000
      enabled: true
      headers:
        User-Agent: "Global-MCP-Client/1.0"
        Accept: "application/json"
        Content-Type: "application/json"
        # Authorization: "Bearer ${GITHUB_TOKEN}" # Set via environment variable
      description: "GitHub Copilot MCP server for repository operations"
      
    # MongoDB MCP Server - Java Spring Boot Implementation
    mongo-mcp-server:
      type: stdio
      command: "java"
      args: ["-jar", "${MONGO_MCP_SERVER_JAR_PATH:C:/spring-boot-ai-mongo.jar}"]
      timeout: 20000
      enabled: true
      environment:
        MONGO_HOST: "${MONGO_HOST:localhost}"
        MONGO_PORT: "${MONGO_PORT:27017}"
        MONGO_DATABASE: "${MONGO_DATABASE:myDB}"
        SPRING_PROFILES_ACTIVE: "${MONGO_MCP_PROFILE:production}"
        LOGGING_LEVEL: "${MONGO_MCP_LOG_LEVEL:INFO}"
      description: "Spring Boot MongoDB MCP server for database operations"
      
    # Node.js MongoDB MCP Server (Alternative)
    mongodb-mcp-server:
      type: stdio
      command: "node"
      args: ["${MCP_MONGODB_SERVER_PATH:./mcp-servers/mongodb-server.js}"]
      timeout: 15000
      enabled: false
      environment:
        NODE_ENV: "production"
        MONGODB_URI: "${MONGODB_URI:mongodb://localhost:27017/myDB}"
        MONGODB_DB_NAME: "${MONGODB_DB_NAME:myDB}"
        MCP_SERVER_NAME: "mongodb-mcp-server"
        LOG_LEVEL: "${LOG_LEVEL:info}"
      description: "Node.js MongoDB MCP server for database operations"
      
    # Example local server (disabled by default)
    example-mcp-server:
      type: stdio
      command: "node"
      args: ["${workspaceFolder}/build/index.js"]
      timeout: 15000
      enabled: false
      environment:
        NODE_ENV: "development"
      description: "Example MCP server for testing"

# Server-specific configuration profiles
---
spring:
  config:
    activate:
      on-profile: "github-only"
mcp:
  servers:
    mongo-mcp-server:
      enabled: false
    mongodb-mcp-server:
      enabled: false
    example-mcp-server:
      enabled: false

---
spring:
  config:
    activate:
      on-profile: "mongo-only"
mcp:
  servers:
    github-mcp-server:
      enabled: false
    mongodb-mcp-server:
      enabled: false
    example-mcp-server:
      enabled: false

---
spring:
  config:
    activate:
      on-profile: "mongodb-only"
mcp:
  servers:
    github-mcp-server:
      enabled: false
    mongo-mcp-server:
      enabled: false
    example-mcp-server:
      enabled: false

---
spring:
  config:
    activate:
      on-profile: "testing"
mcp:
  servers:
    github-mcp-server:
      enabled: false
    mongo-mcp-server:
      enabled: false
    mongodb-mcp-server:
      enabled: false
    example-mcp-server:
      enabled: true